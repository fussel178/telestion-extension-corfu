allprojects {
    repositories {
        mavenCentral()
    }
}

// ignore "modules" module
gradle.taskGraph.whenReady {
    gradle.taskGraph.allTasks.each {
        if (it.project.name == "modules") {
            it.onlyIf { false }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    sourceCompatibility = gradle.sourceCompatibility
    targetCompatibility = gradle.targetCompatibility

    version = gradle.ext.version
    group 'org.github.fussel178.telestion.extension.corfu'

    javadoc {
        options.addBooleanOption('html5', true)
    }

    tasks.withType(JavaExec) {
        systemProperties System.properties
        systemProperties "hazelcast.logging.type": "slf4j"

        // enable modules for hazelcast
        jvmArgs += ["--add-modules", "java.se",
                    "--add-exports", "java.base/jdk.internal.ref=ALL-UNNAMED",
                    "--add-opens", "java.base/java.lang=ALL-UNNAMED",
                    "--add-opens", "java.base/java.nio=ALL-UNNAMED",
                    "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED",
                    "--add-opens", "java.management/sun.management=ALL-UNNAMED",
                    "--add-opens", "jdk.management/com.sun.management.internal=ALL-UNNAMED"]
    }

    // defaults for projects not overwriting these values
    ext {
        prettyName = 'Telestion Module'
    }
    description = 'No description'

    jar {
        metaInf {
            from("$rootDir/LICENSE")
        }

        afterEvaluate { project ->
            manifest {
                attributes(
                        'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                        'Created-By': "Gradle ${gradle.gradleVersion}",
                        'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                        'Build-Jdk-Spec': "${System.properties['java.version']}",
                        'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                        'Specification-Title': project.prettyName,
                        'Specification-Version': project.version,
                        'Specification-Vendor': 'WueSpace e.V.',
                        'Implementation-Title': project.name,
                        'Implementation-Version': project.version,
                        'Implementation-Vendor': 'de.wuespace.telestion',
                        'X-Compile-Target-JDK': gradle.ext.targetCompatibility,
                        'X-Compile-Source-JDK': gradle.ext.sourceCompatibility,
                        'Description': project.description
                )
            }
        }
    }

    publishing {
        afterEvaluate { project ->
            publications {
                maven(MavenPublication) {
                    from components.java

                    pom {
                        name = project.name
                        description = project.description
                        url = 'https://telestion.wuespace.de/'

                        licenses {
                            // TODO: Add license
                            //license {
                            //    name = 'MIT License'
                            //    url = 'https://opensource.org/licenses/mit-license.php'
                            //}
                        }

                        developers {
                            developer {
                                id = 'fussel178'
                                name = 'Ludwig Richter'
                                email = 'riluzm@posteo.de'
                                url = 'https://github.com/fussel178'
                                organization = 'WÃ¼Space e. V.'
                                organizationUrl = 'https://www.wuespace.de/'
                            }
                        }

                        scm {
                            // TODO: Add source control information
                            //connection = 'scm:git:git://github.com/wuespace/telestion-core.git'
                            //developerConnection = 'scm:git:ssh://git@github.com:wuespace/telestion-core.git'
                            //url = 'https://github.com/wuespace/telestion-core/tree/main'
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/fussel178/telestion-extension-corfu"
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }

        // TODO: Add signing (example in telestion-core)
    }
}

task alljavadoc(type: Javadoc) {
    def subProjects = gradle.rootProject.subprojects
    source subProjects.collect { Project project -> project.sourceSets.main.allJava }
    classpath = files(subProjects.collect { Project project -> project.sourceSets.main.compileClasspath })
    destinationDir = file("${buildDir}/docs/javadoc")
}

configure(alljavadoc) {
    group = 'documentation'
    description = 'Generates Javadoc API for all subprojects into one destination.'
}
